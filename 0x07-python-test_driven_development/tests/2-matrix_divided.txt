# Test cases for 2-matrix_divided.py function

# Test Case 1: Basic division
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

# Test Case 2: Division by 2
>>> matrix = [
...     [2, 4, 6],
...     [8, 10, 12]
... ]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> print(matrix)
[[2, 4, 6], [8, 10, 12]]

# Test Case 3: TypeError for non-numeric value in matrix
>>> matrix = [
...     [1, 'a', 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 4: TypeError for rows of different sizes
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test Case 5: TypeError for non-numeric div
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'abc')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test Case 6: ZeroDivisionError for div equal to 0
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
